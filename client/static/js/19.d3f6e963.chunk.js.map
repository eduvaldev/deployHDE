{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","components/alert/index.js","redux/actions/order/index.js","views/pages/order/ViewOrderItem.js","views/pages/order-management/index.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","alert","withReactContent","Swal","alertSuccess","title","text","fire","customClass","confirmButton","buttonsStyling","alertWarning","getOrders","user","picker","dispatch","a","Axios","post","then","response","data","clientOrders","console","log","deleteData","obj","status","toast","error","updateData","createOrder","getState","msg","ViewOrderItem","item","children","sm","responsive","borderless","key","implants","map","it","_id","referencia","style","minWidth","Descripcion","qty","for","selected","Date","comment","deliveryDate","pickupDate","paymentDate","motor","kos","bcs","hexa","mangos","placeholder","ExpandableTable","handleStatus","e","CustomHeader","handleFilter","ActionsComponent","deleteRow","row","OrderManagement","useState","currentPage","filteredData","setFilteredData","setValue","useDispatch","useSelector","state","auth","userinfo","useEffect","order","allData","idx","orderItem","client","username","email","patient_name","patient","name","document","createdAt","id","handleDelete","showCancelButton","confirmButtonText","cancelButton","result","columns","selector","sortable","cell","pill","allowOverflow","tag","noHeader","subHeader","subHeaderComponent","searchText","target","filterData","length","filter","startsWithCondition","toLowerCase","startsWith","includesCondition","includes","pagination","expandableRows","expandOnRowClicked","sortIcon","paginationDefaultPage","expandableRowsComponent","setTimeout","paginationRowsPerPageOptions"],"mappings":"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","file":"static/js/19.d3f6e963.chunk.js","sourcesContent":["import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nexport const alert = withReactContent(Swal)\r\n\r\nexport const alertSuccess = (title, text) => {\r\n  return alert.fire({\r\n    title: title,\r\n    text: text,\r\n    icon: 'success',\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary'\r\n    },\r\n    buttonsStyling: false\r\n  })\r\n}\r\n\r\nexport const alertInfo = (title, text) => {\r\n  return alert.fire({\r\n    title: title,\r\n    text: text,\r\n    icon: 'info',\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary'\r\n    },\r\n    buttonsStyling: false\r\n  })\r\n}\r\n\r\nexport const alertWarning = (title, text) => {\r\n  return alert.fire({\r\n    title: title,\r\n    text: text,\r\n    icon: 'warning',\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary'\r\n    },\r\n    buttonsStyling: false\r\n  })\r\n}\r\n\r\nexport const alertError = (title, text) => {\r\n  return alert.fire({\r\n    title: title,\r\n    text: text,\r\n    icon: 'error',\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary'\r\n    },\r\n    buttonsStyling: false\r\n  })\r\n}\r\n","import {Axios} from \"../root\"\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const getOrders = (user, picker = null) => {\r\n  return async dispatch => {\r\n    await Axios.post(\"order/all\", {user, picker}).then(response => {\r\n      dispatch({ type: \"ORDER_ALL_DATA\", data: response.data })\r\n    });\r\n  }\r\n};\r\n\r\nexport const clientOrders = (user) => {\r\n  return async dispatch => {\r\n    await Axios.post(\"order/client\", {user}).then(response => {\r\n      console.log(response.data)\r\n      dispatch({type: \"ORDER_CLIENT_DATA\", data: response.data})\r\n    });\r\n  };\r\n};\r\n\r\nexport const filterData = value => {\r\n  return dispatch => dispatch({ type: \"FILTER_SESSIONS_DATA\", value })\r\n};\r\n\r\nexport const deleteData = obj => {\r\n  return async dispatch => {\r\n    await Axios\r\n      .post(\"order/delete\",obj)\r\n      .then(response => {\r\n        if(!response.data.status){\r\n          toast.error('Internal Server');\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const updateData = (obj) => {\r\n  return async (dispatch) => {\r\n    await Axios\r\n      .post(\"order/update\", obj)\r\n      .then(response => {\r\n        if(!response.data.status){\r\n          toast.error('Internal Server Error!');\r\n        }\r\n      })\r\n  }\r\n};\r\n\r\nexport const createOrder = obj => {\r\n  return async (dispatch, getState) => {\r\n    await Axios\r\n      .post(\"order/add\", obj)\r\n      .then(response => {\r\n        if (!response.data.status){\r\n          toast.error(response.data.msg);\r\n        }\r\n      })\r\n  }\r\n};\r\n","import React from 'react'\r\nimport {\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  FormGroup,\r\n  Label\r\n} from 'reactstrap'\r\nimport { Check } from \"react-feather\"\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport const ViewOrderItem = (props) => {\r\n  const {item, children} = props\r\n  return <Row className=\"mt-1\">\r\n           <Col sm=\"6\">\r\n             <Table responsive borderless className=\"text-center\">\r\n               <thead>\r\n                 <tr key=\"header\">\r\n                   <th key=\"referencia\">Referencia</th>\r\n                   <th key=\"descripcion\">Descripcion</th>\r\n                   <th key=\"qty\">Cantidad</th>\r\n                 </tr>\r\n               </thead>\r\n               <tbody>\r\n                 {item.implants.map((it) => {\r\n                   return (\r\n                     <tr key={it._id}>\r\n                       <td>{it.referencia}</td>\r\n                       <td style={{minWidth: '230px'}}>{it.Descripcion}</td>\r\n                       <td>{it.qty}</td>\r\n                     </tr>\r\n                   )\r\n                   })}\r\n               </tbody>\r\n             </Table>\r\n           </Col>\r\n           <Col sm=\"6\">\r\n               <Row>\r\n                <Col sm=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"pickup-date\">Fecha de entrega deseada</Label>\r\n                    <DatePicker selected={new Date(item.comment.deliveryDate)} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col sm=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"pickup-date\">Fecha de recogida deseada</Label>\r\n                    <DatePicker selected={new Date(item.comment.pickupDate)} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col sm=\"6\">\r\n                  <FormGroup>\r\n                    <Label for=\"payment-date\">Fecha de pago deseada</Label>\r\n                    <DatePicker selected={new Date(item.comment.paymentDate)} disabled/>\r\n                  </FormGroup>\r\n                </Col>\r\n                 <Col sm=\"6\">\r\n                   <FormGroup>\r\n                     <Checkbox\r\n                       color=\"primary\"\r\n                       disabled\r\n                       icon={<Check className=\"vx-icon\" size={16} />}\r\n                       checked={item.comment.motor}\r\n                       label=\"Requiere motor?\"\r\n                     />\r\n                   </FormGroup>\r\n                 </Col>\r\n                 <Col sm=\"6\">\r\n                   <FormGroup>\r\n                     <Checkbox\r\n                       disabled\r\n                       color=\"primary\"\r\n                       icon={<Check className=\"vx-icon\" size={16} />}\r\n                       checked={item.comment.kos}\r\n                       label=\"Requiere caja KOS?\"\r\n                     />\r\n                   </FormGroup>\r\n                 </Col>\r\n                 <Col sm=\"6\">\r\n                   <FormGroup>\r\n                     <Checkbox\r\n                       disabled\r\n                       color=\"primary\"\r\n                       icon={<Check className=\"vx-icon\" size={16} />}\r\n                       checked={item.comment.bcs}\r\n                       label=\"Requiere caja BCS?\"\r\n                     />\r\n                   </FormGroup>\r\n                 </Col>\r\n                 <Col sm=\"6\">\r\n                   <FormGroup>\r\n                     <Checkbox\r\n                       disabled\r\n                       color=\"primary\"\r\n                       icon={<Check className=\"vx-icon\" size={16} />}\r\n                       checked={item.comment.hexa}\r\n                       label=\"Requiere caja HEXA?\"\r\n                     />\r\n                   </FormGroup>\r\n                 </Col>\r\n                 <Col sm=\"12\">\r\n                   <FormGroup>\r\n                     <Checkbox\r\n                       disabled\r\n                       color=\"primary\"\r\n                       icon={<Check className=\"vx-icon\" size={16} />}\r\n                       checked={item.comment.mangos}\r\n                       label=\"Requiere caja de mangos?\"\r\n                     />\r\n                   </FormGroup>\r\n                 </Col>\r\n                 <Col sm=\"12\">\r\n                   <FormGroup>\r\n                       <Label for=\"patient\">Commentarios</Label>\r\n                       <Input\r\n                         disabled\r\n                         type=\"text\"\r\n                         placeholder=\"Commentarios\"\r\n                         value={item.comment.comment}\r\n                       />\r\n                     </FormGroup>\r\n                 </Col>\r\n               </Row>\r\n           </Col>\r\n           <Col sm=\"12\">\r\n             {children || null}\r\n           </Col>\r\n         </Row>\r\n }\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  ChevronDown,\r\n  Trash,\r\n  Search\r\n} from 'react-feather'\r\nimport DataTable from 'react-data-table-component'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Input,\r\n  Badge,\r\n  Button\r\n} from 'reactstrap'\r\nimport { ViewOrderItem } from '../order/ViewOrderItem'\r\nimport {\r\n  getOrders,\r\n  deleteData,\r\n  updateData\r\n} from \"../../../redux/actions/order\"\r\nimport { alert } from \"../../../components/alert\"\r\n\r\nconst status = [\r\n  {color: \"primary\", title: \"Ordenada\"},\r\n  {color: \"success\", title: \"Enviada\"},\r\n  {color: \"danger\", title: \"Cancelada\"}\r\n]\r\n\r\nconst ExpandableTable = ({ data, handleStatus }) => {\r\n\r\n  return (\r\n    <ViewOrderItem item={data}>\r\n      <div className=\"text-right w-100 pr-2 mb-1\">\r\n        <Button color=\"success\" onClick={e => handleStatus(data._id, 1)}>Enviar</Button>\r\n        <Button color=\"danger\" onClick={e => handleStatus(data._id, 2)} className=\"ml-1\">Cancelar</Button>\r\n      </div>\r\n    </ViewOrderItem>\r\n  )\r\n}\r\n\r\nconst CustomHeader = props => {\r\n  return (\r\n    <div className=\"position-relative has-icon-left mb-1\">\r\n      <Input value={props.value} onChange={e => props.handleFilter(e)} placeholder=\"Buscar...\" />\r\n      <div className=\"form-control-position\">\r\n        <Search size=\"15\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ActionsComponent = props => {\r\n  return (\r\n    <div className=\"data-list-action\">\r\n      <Trash\r\n        className=\"cursor-pointer\"\r\n        size={20}\r\n        onClick={() => {\r\n          props.deleteRow(props.row)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst OrderManagement = () => {\r\n  const [currentPage, setCurrentPage] = useState(0)\r\n  const [filteredData, setFilteredData] = useState([])\r\n  const [value, setValue] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state=> state.auth.userinfo)\r\n\r\n  useEffect(()=> {\r\n    dispatch(getOrders(user))\r\n  }, [user])\r\n\r\n  const dbData = useSelector(state => state.order.allData) || []\r\n  const data = dbData.map((item, idx) => {\r\n    const orderItem = {}\r\n    orderItem.client = item.client.username\r\n    orderItem.email = item.client.email\r\n    orderItem.patient_name = item.patient.name\r\n    orderItem.document = item.patient.document\r\n    orderItem.createdAt = item.createdAt\r\n    orderItem.comment = item.comment\r\n    orderItem.patient = item.patient\r\n    orderItem.implants = item.implants\r\n    orderItem.status = item.status\r\n    orderItem._id = item._id\r\n    orderItem.id = idx\r\n\r\n    return orderItem\r\n  })\r\n  const handleDelete = (item) => {\r\n    return alert.fire({\r\n      title: 'Esta seguro?',\r\n      text: \"Al eliminar el envío, no puede deshacer cambios!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Si, eliminar!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ml-1'\r\n      },\r\n      buttonsStyling: false\r\n    }).then(function (result) {\r\n      if (result.value) {\r\n        dispatch(deleteData({_id: item._id}))\r\n        alert.fire({\r\n          icon: 'success',\r\n          title: 'Eliminado!',\r\n          text: 'Se ha eliminado la orden.',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success'\r\n          }\r\n        })\r\n        dispatch(getOrders(user))\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleStatus = (_id, status) => {\r\n    dispatch(updateData({_id, status}))\r\n    setTimeout(() => {\r\n      dispatch(getOrders(user))\r\n    }, 100)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Doctor',\r\n      selector: 'client',\r\n      sortable: true,\r\n      minWidth: '250px'\r\n    },\r\n    {\r\n      name: 'Correo Electrónico',\r\n      selector: 'email',\r\n      sortable: true,\r\n      minWidth: '250px'\r\n    },\r\n    {\r\n      name: 'Paciente',\r\n      selector: 'patient_name',\r\n      sortable: true,\r\n      minWidth: '200px'\r\n    },\r\n\r\n    {\r\n      name: 'Documento',\r\n      selector: 'document',\r\n      sortable: true,\r\n      minWidth: '100px'\r\n    },\r\n    {\r\n      name: 'Fecha',\r\n      selector: 'createdAt',\r\n      sortable: true,\r\n      minWidth: '150px'\r\n    },\r\n    {\r\n      name: 'Estado de la orden',\r\n      selector: 'status',\r\n      sortable: true,\r\n      minWidth: '150px',\r\n      cell: row => {\r\n        return (\r\n          <Badge color={status[row.status].color} pill>\r\n            {status[row.status].title}\r\n          </Badge>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      name: 'Acciones',\r\n      allowOverflow: true,\r\n      cell: row => (\r\n        <ActionsComponent\r\n          row={row}\r\n          deleteRow={handleDelete}\r\n        />\r\n      )\r\n    }\r\n  ]\r\n\r\n  const handleFilter = e => {\r\n    const searchText = e.target.value\r\n    setValue(searchText)\r\n    let filterData = []\r\n    if (searchText.length) {\r\n      filterData = data.filter(item => {\r\n        let startsWithCondition =\r\n          item.client.toLowerCase().startsWith(searchText.toLowerCase()) ||\r\n          item.email.toLowerCase().startsWith(searchText.toLowerCase()) ||\r\n          item.patient_name.toLowerCase().startsWith(searchText.toLowerCase()) ||\r\n          item.document.toLowerCase().startsWith(searchText.toLowerCase()) ||\r\n          item.createdAt.toLowerCase().startsWith(searchText.toLowerCase())\r\n        let includesCondition =\r\n          item.client.toLowerCase().includes(searchText.toLowerCase()) ||\r\n          item.email.toLowerCase().includes(searchText.toLowerCase()) ||\r\n          item.patient_name.toLowerCase().includes(searchText.toLowerCase()) ||\r\n          item.document.toLowerCase().includes(searchText.toLowerCase()) ||\r\n          item.createdAt.toLowerCase().includes(searchText.toLowerCase())\r\n\r\n        if (startsWithCondition) {\r\n          return startsWithCondition\r\n        } else if (!startsWithCondition && includesCondition) {\r\n          return includesCondition\r\n        } else return null\r\n      })\r\n      setFilteredData(filterData)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Ordenes Creadas</CardTitle>\r\n      </CardHeader>\r\n      <DataTable\r\n        noHeader\r\n        subHeader\r\n        subHeaderComponent={\r\n          <CustomHeader value={value} handleFilter={handleFilter} />\r\n        }\r\n        pagination\r\n        data={value ? filteredData : data}\r\n        expandableRows\r\n        columns={columns}\r\n        expandOnRowClicked\r\n        className='react-dataTable'\r\n        sortIcon={<ChevronDown size={10} />}\r\n        paginationDefaultPage={currentPage + 1}\r\n        expandableRowsComponent={<ExpandableTable handleStatus={handleStatus} />}\r\n        paginationRowsPerPageOptions={[10, 25, 50, 100]}\r\n        // paginationComponent={CustomPagination}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default OrderManagement\r\n"],"sourceRoot":""}