{"version":3,"sources":["components/@vuexy/spinner/Loading-spinner.js","Router.js","components/@vuexy/rippleButton/RippleButton.js","App.js"],"names":["ComponentSpinner","className","React","Component","Home","lazy","UserManagement","Profile","register","login","resetPassword","forgotPassword","Order","UploadInventory","OrderManagement","ErrorPage","AppRoute","connect","state","user","auth","userRole","component","fullLayout","rest","permission","render","props","Consumer","context","LayoutTag","activeLayout","horizontalLayout","VerticalLayout","fallback","RequireAuth","data","is_session","children","to","AppRouter","this","SessionCheck","history","path","exact","mapDispatchToProps","isLoggedIn","Button","Ripple","rippleColor","during","block","color","App","Router"],"mappings":"+OAgBeA,G,8KAZX,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,2B,GAPMC,IAAMC,Y,yBCW/BC,G,cAAOC,gBAAK,kBAChB,uEAGIC,EAAiBD,gBAAK,kBAC1B,uEAGIE,EAAUF,gBAAK,kBACnB,kCAGIG,EAAWH,gBAAK,kBACpB,iCAGII,EAAQJ,gBAAK,kBACjB,kCAGIK,EAAgBL,gBAAK,kBACzB,kCAGIM,EAAiBN,gBAAK,kBAC1B,kCAGIO,EAAQP,gBAAK,kBACjB,6EAGIQ,EAAkBR,gBAAK,kBAC3B,sEAGIS,EAAkBT,gBAAK,kBAC3B,+DAGIU,EAAYV,gBAAK,kBACrB,kCA0CIW,EAAWC,aANO,SAAAC,GACtB,MAAO,CACLC,KAAMD,EAAME,KAAKC,YAIJJ,EAtCG,SAAC,GAAD,IACPd,EADO,EAClBmB,UACAC,EAFkB,EAElBA,WAGGC,GALe,EAGlBC,WAHkB,EAIlBN,KAJkB,sEAOlB,kBAAC,IAAD,iBACMK,EADN,CAEEE,OAAQ,SAAAC,GACN,OACE,kBAAC,IAAcC,SAAf,MACG,SAAAC,GACC,IAAIC,GACa,IAAfP,EACIM,EAAQN,WACuB,eAA/BM,EAAQX,MAAMa,aACdF,EAAQG,iBACRH,EAAQI,eACZ,OACE,kBAACH,EAAD,iBAAeH,EAAf,CAAsBF,WAAYE,EAAMR,OACtC,kBAAC,WAAD,CAAUe,SAAU,kBAAC,EAAD,OAClB,kBAAC/B,EAAcwB,eAkB7BQ,EAAc,SAACC,GACnB,OAAKC,cAGED,EAAKE,SAFH,kBAAC,IAAD,CAAUC,GAAI,YAKnBC,E,kLAEFC,KAAKd,MAAMe,iB,+BAGX,OACE,kBAAC,IAAD,CAAQC,QAASA,KACf,kBAAC,IAAD,KACE,kBAAC3B,EAAD,CACE4B,KAAK,SACLtB,UAAWb,EACXc,YAAU,IAEZ,kBAACP,EAAD,CACE4B,KAAK,mBACLtB,UAAWX,EACXY,YAAU,IAEZ,kBAACP,EAAD,CACE4B,KAAK,YACLtB,UAAWd,EACXe,YAAU,IAEZ,kBAACP,EAAD,CACE4B,KAAK,0BACLtB,UAAWZ,EACXa,YAAU,IAEZ,kBAACP,EAAD,CACE4B,KAAK,SACLtB,UAAWP,EACXQ,YAAU,IAEZ,kBAAC,EAAD,KACE,kBAACP,EAAD,CACE6B,OAAK,EACLD,KAAK,IACLtB,UAAWlB,IAEb,kBAACY,EAAD,CACE4B,KAAK,WACLtB,UAAWf,IAEb,kBAACS,EAAD,CACE4B,KAAK,kBACLtB,UAAWhB,IAEb,kBAACU,EAAD,CACE4B,KAAK,oBACLtB,UAAWT,IAEb,kBAACG,EAAD,CACE4B,KAAK,SACLtB,UAAWV,IAEb,kBAACI,EAAD,CACE4B,KAAK,oBACLtB,UAAWR,MAIjB,kBAAC,IAAD,W,GA7DgBZ,IAAMC,WAyExB2C,EAAqB,CACzBJ,iBAAcL,gBAGDpB,eAVO,SAACC,GAAD,MACpB,CAEA6B,WAAa7B,EAAME,KAAK2B,cAOYD,EAAvB7B,CAA2CuB,G,kBCjK1DQ,IAAOC,OAhBc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,MAAU5B,EAAlC,uDACnB,kBAAC,IAAD,CACE6B,MAAOH,GAA4B,0BACnCC,OAAQA,EACRlD,UAAS,UAAKmD,EAAQ,UAAY,KAElC,kBAACJ,EAAA,EAAWxB,K,cCAD8B,UAJH,SAAA3B,GACV,OAAO,kBAAC4B,EAAD","file":"static/js/21.d20cb8a3.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"../../../assets/scss/components/app-loader.scss\"\r\nclass ComponentSpinner extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fallback-spinner\">\r\n        <div className=\"loading component-loader\">\r\n          <div className=\"effect-1 effects\"></div>\r\n          <div className=\"effect-2 effects\"></div>\r\n          <div className=\"effect-3 effects\"></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComponentSpinner\r\n","import React, { Suspense, lazy } from \"react\"\r\nimport { Router, Switch, Route, Redirect } from \"react-router-dom\"\r\nimport { history } from \"./history\"\r\nimport { connect } from \"react-redux\"\r\nimport Spinner from \"./components/@vuexy/spinner/Loading-spinner\"\r\nimport { SessionCheck, is_session } from \"./redux/actions/auth\"\r\nimport { ContextLayout } from \"./utility/context/Layout\"\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Loader from 'react-loader-spinner';\r\n\r\n// Route-based code splitting\r\nconst Home = lazy(() =>\r\n  import(\"./views/pages/Home\")\r\n)\r\n\r\nconst UserManagement = lazy(() =>\r\n  import(\"./views/pages/usermanagement\")\r\n)\r\n\r\nconst Profile = lazy(() =>\r\n  import(\"./views/pages/usermanagement/Profile\")\r\n)\r\n\r\nconst register = lazy(() =>\r\n  import(\"./views/pages/authentication/login/Register\")\r\n)\r\n\r\nconst login = lazy(() =>\r\n  import(\"./views/pages/authentication/login/Login\")\r\n)\r\n\r\nconst resetPassword = lazy(() =>\r\n  import(\"./views/pages/authentication/login/ResetPassword\")\r\n)\r\n\r\nconst forgotPassword = lazy(() =>\r\n  import(\"./views/pages/authentication/login/ForgotPassword\")\r\n)\r\n\r\nconst Order = lazy(() =>\r\n  import(\"./views/pages/order\")\r\n)\r\n\r\nconst UploadInventory = lazy(() =>\r\n  import(\"./views/pages/upload_inventory\")\r\n)\r\n\r\nconst OrderManagement = lazy(() =>\r\n  import(\"./views/pages/order-management\")\r\n)\r\n\r\nconst ErrorPage = lazy(() =>\r\n  import(\"./views/pages/Error\")\r\n)\r\n\r\n// Set Layout and Component Using App Route\r\nconst RouteConfig = ({\r\n  component: Component,\r\n  fullLayout,\r\n  permission,\r\n  user,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => {\r\n      return (\r\n        <ContextLayout.Consumer>\r\n          {context => {\r\n            let LayoutTag =\r\n              fullLayout === true\r\n                ? context.fullLayout\r\n                : context.state.activeLayout === \"horizontal\"\r\n                ? context.horizontalLayout\r\n                : context.VerticalLayout\r\n              return (\r\n                <LayoutTag {...props} permission={props.user}>\r\n                  <Suspense fallback={<Spinner />}>\r\n                    <Component {...props} />\r\n                  </Suspense>\r\n                </LayoutTag>\r\n              )\r\n          }}\r\n        </ContextLayout.Consumer>\r\n      )\r\n    }}\r\n  />\r\n)\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.auth.userRole\r\n  }\r\n}\r\n\r\nconst AppRoute = connect(mapStateToProps)(RouteConfig)\r\n\r\nconst RequireAuth = (data) => {\r\n  if (!is_session()) {\r\n    return <Redirect to={'/login'} />;\r\n  }\r\n  return data.children;\r\n};\r\n\r\nclass AppRouter extends React.Component {\r\n  componentDidMount() {\r\n    this.props.SessionCheck();\r\n  }\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <Switch>\r\n          <AppRoute\r\n            path=\"/login\"\r\n            component={login}\r\n            fullLayout\r\n          />\r\n          <AppRoute\r\n            path=\"/forgot_password\"\r\n            component={forgotPassword}\r\n            fullLayout\r\n          />\r\n          <AppRoute\r\n            path=\"/register\"\r\n            component={register}\r\n            fullLayout\r\n          />\r\n          <AppRoute\r\n            path=\"/reset_password/:param1\"\r\n            component={resetPassword}\r\n            fullLayout\r\n          />\r\n          <AppRoute\r\n            path=\"/error\"\r\n            component={ErrorPage}\r\n            fullLayout\r\n          />\r\n          <RequireAuth>\r\n            <AppRoute\r\n              exact\r\n              path=\"/\"\r\n              component={Home}\r\n            />\r\n            <AppRoute\r\n              path=\"/profile\"\r\n              component={Profile}\r\n            />\r\n            <AppRoute\r\n              path=\"/usermanagement\"\r\n              component={UserManagement}\r\n            />\r\n            <AppRoute\r\n              path=\"/upload_inventory\"\r\n              component={UploadInventory}\r\n            />\r\n            <AppRoute\r\n              path=\"/order\"\r\n              component={Order}\r\n            />\r\n            <AppRoute\r\n              path=\"/order_management\"\r\n              component={OrderManagement}\r\n            />\r\n          </RequireAuth>\r\n        </Switch>\r\n        <ToastContainer />\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst getIsLoggedIn = (state) => (\r\n  {\r\n  // Loading  :state.client.loading,\r\n  isLoggedIn : state.auth.isLoggedIn,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  SessionCheck, is_session\r\n}\r\n\r\nexport default connect(getIsLoggedIn, mapDispatchToProps)(AppRouter)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Button } from \"reactstrap\"\r\nimport Ripples from \"react-ripples\"\r\n\r\nconst RippleButton = ({ rippleColor, during, block, ...rest }) => (\r\n  <Ripples\r\n    color={rippleColor ? rippleColor : \"rgba(255, 255, 255, .5)\"}\r\n    during={during}\r\n    className={`${block ? \"d-block\" : \"\"}`}\r\n  >\r\n    <Button {...rest} />\r\n  </Ripples>\r\n)\r\n\r\nRippleButton.propTypes = {\r\n  ...Button.propTypes,\r\n  rippleColor: PropTypes.string,\r\n  during: PropTypes.number\r\n}\r\n\r\nButton.Ripple = RippleButton\r\n","import React from \"react\"\r\nimport Router from \"./Router\"\r\nimport \"./components/@vuexy/rippleButton/RippleButton\"\r\n\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\"\r\nimport \"prismjs/themes/prism-tomorrow.css\"\r\n\r\nconst App = props => {\r\n  return <Router />\r\n}\r\n\r\nexport default App\r\n"],"sourceRoot":""}